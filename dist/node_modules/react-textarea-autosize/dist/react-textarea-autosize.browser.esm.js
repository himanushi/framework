import W from "../../@babel/runtime/helpers/esm/extends.js";
import A from "../../@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js";
import * as h from "react";
import k from "../../use-latest/dist/use-latest.esm.js";
import I from "../../use-composed-ref/dist/use-composed-ref.esm.js";
var H = {
  "min-height": "0",
  "max-height": "none",
  height: "0",
  visibility: "hidden",
  overflow: "hidden",
  position: "absolute",
  "z-index": "-1000",
  top: "0",
  right: "0",
  display: "block"
}, B = function(t) {
  Object.keys(H).forEach(function(r) {
    t.style.setProperty(r, H[r], "important");
  });
}, w = B, n = null, C = function(t, r) {
  var e = t.scrollHeight;
  return r.sizingStyle.boxSizing === "border-box" ? e + r.borderSize : e - r.paddingSize;
};
function M(i, t, r, e) {
  r === void 0 && (r = 1), e === void 0 && (e = 1 / 0), n || (n = document.createElement("textarea"), n.setAttribute("tabindex", "-1"), n.setAttribute("aria-hidden", "true"), w(n)), n.parentNode === null && document.body.appendChild(n);
  var o = i.paddingSize, s = i.borderSize, a = i.sizingStyle, p = a.boxSizing;
  Object.keys(a).forEach(function(g) {
    var m = g;
    n.style[m] = a[m];
  }), w(n), n.value = t;
  var d = C(n, i);
  n.value = t, d = C(n, i), n.value = "x";
  var c = n.scrollHeight - o, l = c * r;
  p === "border-box" && (l = l + o + s), d = Math.max(l, d);
  var f = c * e;
  return p === "border-box" && (f = f + o + s), d = Math.min(f, d), [d, c];
}
var E = function() {
}, N = function(t, r) {
  return t.reduce(function(e, o) {
    return e[o] = r[o], e;
  }, {});
}, _ = [
  "borderBottomWidth",
  "borderLeftWidth",
  "borderRightWidth",
  "borderTopWidth",
  "boxSizing",
  "fontFamily",
  "fontSize",
  "fontStyle",
  "fontWeight",
  "letterSpacing",
  "lineHeight",
  "paddingBottom",
  "paddingLeft",
  "paddingRight",
  "paddingTop",
  // non-standard
  "tabSize",
  "textIndent",
  // non-standard
  "textRendering",
  "textTransform",
  "width",
  "wordBreak",
  "wordSpacing",
  "scrollbarGutter"
], $ = !!document.documentElement.currentStyle, j = function(t) {
  var r = window.getComputedStyle(t);
  if (r === null)
    return null;
  var e = N(_, r), o = e.boxSizing;
  if (o === "")
    return null;
  $ && o === "border-box" && (e.width = parseFloat(e.width) + parseFloat(e.borderRightWidth) + parseFloat(e.borderLeftWidth) + parseFloat(e.paddingRight) + parseFloat(e.paddingLeft) + "px");
  var s = parseFloat(e.paddingBottom) + parseFloat(e.paddingTop), a = parseFloat(e.borderBottomWidth) + parseFloat(e.borderTopWidth);
  return {
    sizingStyle: e,
    paddingSize: s,
    borderSize: a
  };
}, P = j;
function y(i, t, r) {
  var e = k(r);
  h.useLayoutEffect(function() {
    var o = function(a) {
      return e.current(a);
    };
    if (i)
      return i.addEventListener(t, o), function() {
        return i.removeEventListener(t, o);
      };
  }, []);
}
var G = function(t, r) {
  y(document.body, "reset", function(e) {
    t.current.form === e.target && r(e);
  });
}, O = function(t) {
  y(window, "resize", t);
}, Y = function(t) {
  y(document.fonts, "loadingdone", t);
}, q = ["cacheMeasurements", "maxRows", "minRows", "onChange", "onHeightChange"], X = function(t, r) {
  var e = t.cacheMeasurements, o = t.maxRows, s = t.minRows, a = t.onChange, p = a === void 0 ? E : a, d = t.onHeightChange, c = d === void 0 ? E : d, l = A(t, q), f = l.value !== void 0, g = h.useRef(null), m = I(g, r), L = h.useRef(0), x = h.useRef(), v = function() {
    var u = g.current, z = e && x.current ? x.current : P(u);
    if (z) {
      x.current = z;
      var R = M(z, u.value || u.placeholder || "x", s, o), S = R[0], T = R[1];
      L.current !== S && (L.current = S, u.style.setProperty("height", S + "px", "important"), c(S, {
        rowHeight: T
      }));
    }
  }, F = function(u) {
    f || v(), p(u);
  };
  return h.useLayoutEffect(v), G(g, function() {
    if (!f) {
      var b = g.current, u = b.value;
      requestAnimationFrame(function() {
        u !== b.value && v();
      });
    }
  }), O(v), Y(v), /* @__PURE__ */ h.createElement("textarea", W({}, l, {
    onChange: F,
    ref: m
  }));
}, Q = /* @__PURE__ */ h.forwardRef(X);
export {
  Q as default
};
