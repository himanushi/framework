import { invariant as t } from "../../../../../motion-utils/dist/es/errors.js";
import { noop as i } from "../../../../../motion-utils/dist/es/noop.js";
import { isBezierDefinition as m } from "../../../../../motion-dom/dist/es/utils/is-bezier-definition.js";
import { anticipate as u } from "../anticipate.js";
import { backOut as s, backInOut as p, backIn as f } from "../back.js";
import { circOut as I, circInOut as b, circIn as l } from "../circ.js";
import { cubicBezier as O } from "../cubic-bezier.js";
import { easeOut as g, easeInOut as y, easeIn as k } from "../ease.js";
const e = {
  linear: i,
  easeIn: k,
  easeInOut: y,
  easeOut: g,
  circIn: l,
  circInOut: b,
  circOut: I,
  backIn: f,
  backInOut: p,
  backOut: s,
  anticipate: u
}, L = (r) => {
  if (m(r)) {
    t(r.length === 4, "Cubic bezier arrays must contain four numerical values.");
    const [o, a, n, c] = r;
    return O(o, a, n, c);
  } else if (typeof r == "string")
    return t(e[r] !== void 0, `Invalid easing type '${r}'`), e[r];
  return r;
};
export {
  L as easingDefinitionToFunction
};
