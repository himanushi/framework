import { invariant as l } from "../../../../../../motion-utils/dist/es/errors.js";
import { isNumericalString as c } from "../../../utils/is-numerical-string.js";
import { isCSSVariableToken as s } from "./is-css-variable.js";
const m = (
  // eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words
  /^var\(--(?:([\w-]+)|([\w-]+), ?([a-zA-Z\d ()%#.,-]+))\)/u
);
function p(r) {
  const t = m.exec(r);
  if (!t)
    return [,];
  const [, e, i, a] = t;
  return [`--${e ?? i}`, a];
}
const u = 4;
function f(r, t, e = 1) {
  l(e <= u, `Max CSS variable fallback depth detected in property "${r}". This may indicate a circular fallback dependency.`);
  const [i, a] = p(r);
  if (!i)
    return;
  const o = window.getComputedStyle(t).getPropertyValue(i);
  if (o) {
    const n = o.trim();
    return c(n) ? parseFloat(n) : n;
  }
  return s(a) ? f(a, t, e + 1) : a;
}
export {
  f as getVariableValue,
  p as parseCSSVariable
};
