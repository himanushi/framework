import { press as i } from "../../../../motion-dom/dist/es/gestures/press/index.js";
import { extractEventInfo as m } from "../events/event-info.js";
import { Feature as u } from "../motion/features/Feature.js";
import { frame as p } from "../frameloop/frame.js";
function s(t, e, n) {
  const { props: r } = t;
  if (t.current instanceof HTMLButtonElement && t.current.disabled)
    return;
  t.animationState && r.whileTap && t.animationState.setActive("whileTap", n === "Start");
  const a = "onTap" + (n === "End" ? "" : n), o = r[a];
  o && p.postRender(() => o(e, m(e)));
}
class d extends u {
  mount() {
    const { current: e } = this.node;
    e && (this.unmount = i(e, (n, r) => (s(this.node, r, "Start"), (a, { success: o }) => s(this.node, a, o ? "End" : "Cancel")), { useGlobalTarget: this.node.props.globalTapTarget }));
  }
  unmount() {
  }
}
export {
  d as PressGesture
};
