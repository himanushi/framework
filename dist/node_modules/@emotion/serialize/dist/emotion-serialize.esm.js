import b from "../../hash/dist/emotion-hash.esm.js";
import C from "../../unitless/dist/emotion-unitless.esm.js";
import E from "../../memoize/dist/emotion-memoize.esm.js";
var _ = !1, x = /[A-Z]|^ms/g, O = /_EMO_([^_]+?)_([^]*?)_EMO_/g, y = function(n) {
  return n.charCodeAt(1) === 45;
}, v = function(n) {
  return n != null && typeof n != "boolean";
}, m = /* @__PURE__ */ E(function(t) {
  return y(t) ? t : t.replace(x, "-$&").toLowerCase();
}), p = function(n, e) {
  switch (n) {
    case "animation":
    case "animationName":
      if (typeof e == "string")
        return e.replace(O, function(s, a, r) {
          return l = {
            name: a,
            styles: r,
            next: l
          }, a;
        });
  }
  return C[n] !== 1 && !y(n) && typeof e == "number" && e !== 0 ? e + "px" : e;
}, A = "Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.";
function c(t, n, e) {
  if (e == null)
    return "";
  var s = e;
  if (s.__emotion_styles !== void 0)
    return s;
  switch (typeof e) {
    case "boolean":
      return "";
    case "object": {
      var a = e;
      if (a.anim === 1)
        return l = {
          name: a.name,
          styles: a.styles,
          next: l
        }, a.name;
      var r = e;
      if (r.styles !== void 0) {
        var o = r.next;
        if (o !== void 0)
          for (; o !== void 0; )
            l = {
              name: o.name,
              styles: o.styles,
              next: l
            }, o = o.next;
        var f = r.styles + ";";
        return f;
      }
      return M(t, n, e);
    }
  }
  var i = e;
  if (n == null)
    return i;
  var u = n[i];
  return u !== void 0 ? u : i;
}
function M(t, n, e) {
  var s = "";
  if (Array.isArray(e))
    for (var a = 0; a < e.length; a++)
      s += c(t, n, e[a]) + ";";
  else
    for (var r in e) {
      var o = e[r];
      if (typeof o != "object") {
        var f = o;
        n != null && n[f] !== void 0 ? s += r + "{" + n[f] + "}" : v(f) && (s += m(r) + ":" + p(r, f) + ";");
      } else {
        if (r === "NO_COMPONENT_SELECTOR" && _)
          throw new Error(A);
        if (Array.isArray(o) && typeof o[0] == "string" && (n == null || n[o[0]] === void 0))
          for (var i = 0; i < o.length; i++)
            v(o[i]) && (s += m(r) + ":" + p(r, o[i]) + ";");
        else {
          var u = c(t, n, o);
          switch (r) {
            case "animation":
            case "animationName": {
              s += m(r) + ":" + u + ";";
              break;
            }
            default:
              s += r + "{" + u + "}";
          }
        }
      }
    }
  return s;
}
var d = /label:\s*([^\s;{]+)\s*(;|$)/g, l;
function V(t, n, e) {
  if (t.length === 1 && typeof t[0] == "object" && t[0] !== null && t[0].styles !== void 0)
    return t[0];
  var s = !0, a = "";
  l = void 0;
  var r = t[0];
  if (r == null || r.raw === void 0)
    s = !1, a += c(e, n, r);
  else {
    var o = r;
    a += o[0];
  }
  for (var f = 1; f < t.length; f++)
    if (a += c(e, n, t[f]), s) {
      var i = r;
      a += i[f];
    }
  d.lastIndex = 0;
  for (var u = "", h; (h = d.exec(a)) !== null; )
    u += "-" + h[1];
  var w = b(a) + u;
  return {
    name: w,
    styles: a,
    next: l
  };
}
export {
  V as serializeStyles
};
